Q. 4. Write a Python program that reads a file containing a list of usernames and passwords, one pair per line (separated by a comma). It checks each password to see if it has been leaked in a data breach. You can use the "Have I Been Pwned" API (https://haveibeenpwned.com/API/v3) to check if a password has been leaked.
import hashlib
import requests

def hash_password(password):
    sha1_hash = hashlib.sha1(password.encode()).hexdigest().upper()
    print("SHA1 Hash genarated : ",sha1_hash)
    return sha1_hash

def check_password_pwned(hash_prefix):
    url = f'https://api.pwnedpasswords.com/range/{hash_prefix}'
    response = requests.get(url)
    return response.text

def check_credentials(file_name):
    with open(file_name, 'r') as file:
        for line in file:
            username, password = line.strip().split(',')
            sha1_hash = hash_password(password)
            prefix = sha1_hash[:5]
            suffix = sha1_hash[5:]
            response = check_password_pwned(prefix)
            if suffix in response:
                print(f'Password for {username} has been leaked!')
            else:
                print(f'Password for {username} is safe.')

check_credentials('credential.txt')




How This Works
1.	Using the "Have I Been Pwned" API:
o	The API accepts the first 5 characters of the SHA-1 hash of the password (prefix) and returns a list of hash suffixes and their breach counts.

2.	Password Checking:
o	The program calculates the SHA-1 hash of the password and splits it into:
	Prefix: First 5 characters sent to the API.

	Suffix: Remaining characters checked against the API response.

o	If the suffix is found, the password has been leaked, and its breach count is returned.


3.	Output:
o	The program prints whether each password is safe or has been leaked, along with the breach count.

SECURITY NOTE
•	The "k-anonymity" approach ensures that only the prefix of the password's hash is sent to the API, keeping the original password private.

•	Avoid sharing the original file or leaked passwords.

